---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.3.1
    container_name: kafka
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: LISTENER_INT://0.0.0.0:9092,LISTENER_EXT://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INT://kafka:9092,LISTENER_EXT://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT

  producer1:
    container_name: producer1
    build: ./node-producer
    volumes:
      - ./node-producer:/app
      - /app/node_modules/
    command: npm run start -- driver-1 drivers/1.json
    environment:
      BOOTSTRAP_SERVERS: kafka:9092

  producer2:
    container_name: producer2
    build: ./node-producer
    volumes:
      - ./node-producer:/app
      - /app/node_modules/
    command: npm run start -- driver-2 drivers/2.json
    environment:
      BOOTSTRAP_SERVERS: kafka:9092

  producer3:
    container_name: producer3
    build: ./node-producer
    volumes:
      - ./node-producer:/app
      - /app/node_modules/
    command: npm run start -- driver-3 drivers/3.json
    environment:
      BOOTSTRAP_SERVERS: kafka:9092

  producer4:
    container_name: producer4
    build: ./node-producer
    volumes:
      - ./node-producer:/app
      - /app/node_modules/
    command: npm run start -- driver-4 drivers/4.json
    environment:
      BOOTSTRAP_SERVERS: kafka:9092

  producer5:
    container_name: producer5
    build: ./node-producer
    volumes:
      - ./node-producer:/app
      - /app/node_modules/
    command: bash -c "sleep 60 && npm run start -- driver-5 drivers/2.json"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092

  streams:
    container_name: streams
    build: ./streams
    environment:
      BOOTSTRAP_SERVERS: kafka:9092

  webserver:
    container_name: webserver
    build: ./webserver
    volumes:
      - ./webserver:/home/node/app
      - /home/node/app/node_modules/
    ports:
      - 3000:3000
    environment:
      BOOTSTRAP_SERVERS: kafka:9092

  schema-registry:
    image: confluentinc/cp-schema-registry:5.3.1
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9092'

  ksql-server:
    image: confluentinc/cp-ksql-server:5.3.1
    hostname: ksql-server
    container_name: ksql-server
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"
      KSQL_BOOTSTRAP_SERVERS: "kafka:9092"
      KSQL_HOST_NAME: ksql-server
      KSQL_APPLICATION_ID: "dev-class"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"


  nginx:
    image: nginx:1.15-alpine
    container_name: nginx
    depends_on:
      - webserver
    ports:
      - 80:8080
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
